

from modulo_lib import *

def miller_rabin_test(w, iterations):
    b_list = [
            0xffffff00000001000000000000000000000000fffffffffffffffffffffffc,
            0xc635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b,
            0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c2,
            0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51,
            0xf3f113f3406a2ddafd9493d3d7169d25ce8503cc3e381ce797359e92b9826c,
            0x42725f35770d586dcd7e067bca33841bf1c33c211e433234beb8a7e66c4de0,
            0x8f22820598a60fe3c582a4e4e495f2997b48a1de965059a918c3c50bb251a2, 
            0x468ab3e51fcb47229871e7e95bf28286cd448ed3eb0c78ecd34eac121d285b, 
            0xc297492c20cce4966ae2cd2b58b75e48ffbd548995ef960d41e274dc1e5b3e, 
            0xbad26fbd93b1ab7e8448e98e098c19f90e3156a94ae76e356e8bcaa5d21019,
            0x4a1d6bbedf46a06f7d7618287a69fd83346c8ed1ef774189b0e3613855bd8d, 
            0x30939029db21454321313957aec9c854a4b23170b0cee4c46f2ec46cdf0d93, 
            0xe1aa8f7141bfe1ed0ab485599b5779ebec8b93533c5bde62423df00d2b1cb5, 
            0xd2f122ef803850478290ab2a627771ec4eccef6334a3d343c0a9f7e6561038, 
            0x9182b5003bc1da72e3be14e0fb0c2593330522bd83326ee2e2457d8e6de178, 
            0x6a140c5570ae60a61eab131df0a7b9955ca52eee3a03b007a6fc97e60ddcd0, 
            0x32665be0dea111a9f1de8948b01514c36e693babf68c4db9ed6307a3e9ec3d, 
            0xc53bb6c40c028674ca4dbb66216624f8939409db2e75d7fa62d4b5e6a8870a, 
            0xcca15363506327c1cb6a22b45277e102279482b5edc0aff9a43c31e5ee4c7f, 
            0x5f70630191f1e4f4a011b40220423775f79c950c421df6a003e867c64d00c6, 
            0xd1c592c6f4fc29af17c2bd51f6c8a5ea99169413cc8fbce78d146d21315922, 
            0xf8af31df7a189eddb7a3dec5822322ab68811a4ab165dd6216e93beda6327b, 
            0x4f09a05fac180f4162aa8320e134a671366e374fff2a669868ee233e77bf98, 
            0xc13ed81bdf7bdf9f50f3b9938aed53978b06ec6c01b7c15111c42b813f40f4, 
            0x3d01d0abc5953e53e5d138e3d692d41a616f5757559bc2d92888c2bcc4e2af, 
            0x193f2d8a1f2eb2048247f138028cf01a45ce26236dd5a56f707435768cdfbf, 
            0x4a03bfe85bdb2daa2679f90708a92d0dd6ca89397a68fb2df14a32d808ed7f, 
            0x339d35143ab7894b6d62618d19a5f8d6bc4cb6e52a11ea88c6bba46d0ca352, 
            0xdc93a482de79b6945961a59fde2670e04efacd9fa462ea514b7dc4a3c108c7, 
            0xce26909e040d04a81f890e57c1da36056fcc9c5b6e870e7ddbefc849c4167f, 
            0xfd00adb9b97301c9a9cc2bcc6007da4f30ec4dbf31259407ba732617928f48, 
            0x880df7592b7b4d98b051aed93df1dddc56c93d8f17148250867c1c89c3bfd0, 
            0xfcae15e2dc42b476c8c68143cfcc9446a73fea0145370be09e1d98cbe781fd, 
            0xd2015a57f4f6398fb1e1d1914a7841e7463c9536c59ce39d41f55168e5be91, 
            0x6b9ac4a0b8a2038ae8645b74673263083f58c9fdc2715a411cd96d46ae3edb,
            0x2a8b67f7e0526c090cea0b002ebf997d85d2d9d676007cca264536cc109cee, 
            0xffcb0a9a7dfe6606eecf47ad4c3c4a4e39a621a3c310b661115a03356f55f3, 
            0xe572e4df83286cb40ddea98c8958c6b3aa0751fab23793d87f73946ec5ccf9, 
            0xef20af4e7295b11e8f6d3d02240a3dac0349cce0f30b0638136b84c0966e74, 
            0xc94d5b90b318d9ea9dd271891ae71799bf5ce7a4d629696ea97d5e617021cf, 
            0x56f3c6fecafa2a290159021d82bd1799ff6974d15e49646b5dea5f0b32e889, 
            0x1c1353015f858c204d4352f5c186b6ca582f44e2c250446a49733d20aadce5, 
            0xbe6e27b32cdf8dbafc1056e59f0a28b21b69f4ba15cd8668702aa678a29772, 
            0x7f5b34267b6a8b10fbf97ffdc6fde4b34e959e1da067b6e1869c4fbe272ab4, 
            0xe3892e89b6d2b79db0e0674d1287752e66d42cc6abe0db835de74ac49c6d04, 
            0x24366156cb659023f21be5dda2b9fe84b402833f46a7b876b9488cde4727a5, 
            0xf0fa6956d8c7af3ee73bc2d4ec911c8f37442d407daad19ca47910e1a5c5e6, 
            0x5884f036bd33a6576f1f822e6fb9caa5fdd2a20ec14bde4de2d3ef31af4554, 
            ]
    status=1
    a=1
    w_1=w-1
    print("w = ",hex(w))
    print("w_1 = ",hex(w_1))
    temp_w_1 = w_1
    while(((temp_w_1>>1)&1)==0):
        a = a + 1
        temp_w_1 = temp_w_1 >> 1
        print("a = ", a)

    m = w_1 >> a

    print("\n")
    print("a = ", a)
    print("m = ", hex(m))

    print("\n\n")
    for i in range(1, iterations+1):
        print("\n ------------------- iterations = ",i," --------------------------")

        b =  (b_list[i] % w)
        print("b = ", hex(b))

        z = pow(b,m,w)
        print("========> Mod_Exp : z = b^m mod w = ",hex(z))

        if(z == 1):
            continue
        if(z == w_1):
            continue


        j=1
        while(j<a): #for j in range(1,a):
            
            print("\n--------> Mod_Mul ")
            z = (z**2)%w
            print("j = ", j,",  z=z^2 mod w = ",hex(z))
            if(z == w_1):
                break

            if(z == 1):
                status=0
                break

            j = j + 1

        if(j == a):
            status=0
            break

    return(status)


#  ---------main starts here ------------------

#p=0xffffffff00000001000000000000000000000000ffffffffffffffffffffffaf
#p=0xe021757c777288dacfe67cb2e59dc02c70a8cebf56262336592c18dcf466e0a4ed405318ac406bd79eca29183901a557db556dd06f7c6bea175dcb8460b6b1bc05832b01eedf86463238b7cb6643deef66bc4f57bf8ff7ec7c4b8a8af14f478980aabedd42afa530ca47849f0151b7736aa4cd2ff37f322a9034de791ebe3f51
#p=0x01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff
#p=0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff
#p=0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b
#p=0xA9FB57DBA1EEA9BC3E660A909D838D718C397AA3B561A6F7901E0E82974856A7
p = 2**252 + 0x14def9dea2f79cd65812631a5cf5d3ed


# from http://safecurves.cr.yp.to/field.html

p=0xb0000000000000000000000953000000000000000000001f9d7     #anomalous

p=0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffd   #M-221  or  2**221 - 3

p=0x3fffffffffffffffffffffffffffffffffffffffffffffffffffff8b   #E-222  or 2**222 - 117


p=0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7  #Curve1174  or 2**251 - 9


p=0x2523648240000001ba344d80000000086121000000000013a700000000000013  #BN(2,254)

p=0xa9fb57dba1eea9bc3e660a909d838d726e3bf623d52620282013481d1f6e5377  #Brainpool256t1

p=0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f  #Secp256k1

p=0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff97  #E-382  or 2**382 - 105

p=0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff45  #M-383  or 2**383 - 187   or Curve383187

p=0x8cb91e82a3386d280f5d6f7e50e641df152f7109ed5456b412b1da197fb71123acd3a729901d1a71874700133107ec53  #BrainpoolP384t1 


p=0x3fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffef  #Curve41417  or 2**414  - 17



p=0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffffffffffffffffffffffffffffffffffffffffffffffffffff  #Curve448 or   2^448 - 2^224 - 1 

p=0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff45  #M-511  or 2**511  - 187

p=0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff   #E-521 or 2**521  - 1


#https://www.rfc-editor.org/rfc/rfc7919.html

#The 2048-bit group has registry value 256 and is calculated from the following formula:
#The modulus is:  p = 2^2048 - 2^1984 + {[2^1918 * e] + 560316 } * 2^64 - 1
#The generator is: g = 2
#The group size is: q = (p-1)/2
#The estimated symmetric-equivalent strength of this group is 103 bits
p=0xFFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF97D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD65612433F51F5F066ED0856365553DED1AF3B557135E7F57C935984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE73530ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FBB96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB190B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F619172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD733BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA886B423861285C97FFFFFFFFFFFFFFFF  #2^2048 - 2^1984 + {[2^1918 * e] + 560316 } * 2^64 - 1

q=0x7FFFFFFFFFFFFFFFD6FC2A2C515DA54D57EE2B10139E9E78EC5CE2C1E7169B4AD4F09B208A3219FDE649CEE7124D9F7CBE97F1B1B1863AEC7B40D901576230BD69EF8F6AEAFEB2B09219FA8FAF83376842B1B2AA9EF68D79DAAB89AF3FABE49ACC278638707345BBF15344ED79F7F4390EF8AC509B56F39A98566527A41D3CBD5E0558C159927DB0E88454A5D96471FDDCB56D5BB06BFA340EA7A151EF1CA6FA572B76F3B1B95D8C8583D3E4770536B84F017E70E6FBF176601A0266941A17B0C8B97F4E74C2C1FFC7278919777940C1E1FF1D8DA637D6B99DDAFE5E17611002E2C778C1BE8B41D96379A51360D977FD4435A11C30942E4BFFFFFFFFFFFFFFFF  #q = (p-1)/2
p = q


#The 3072-bit prime has registry value 257 and is calculated from the following formula:
# The modulus is: p = 2^3072 - 2^3008 + {[2^2942 * e] + 2625351} * 2^64 - 1
#The generator is: g = 2
#The group size is: q = (p-1)/2
#The estimated symmetric-equivalent strength of this group is 125 bits
p=0xFFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF97D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD65612433F51F5F066ED0856365553DED1AF3B557135E7F57C935984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE73530ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FBB96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB190B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F619172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD733BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA886B4238611FCFDCDE355B3B6519035BBC34F4DEF99C023861B46FC9D6E6C9077AD91D2691F7F7EE598CB0FAC186D91CAEFE130985139270B4130C93BC437944F4FD4452E2D74DD364F2E21E71F54BFF5CAE82AB9C9DF69EE86D2BC522363A0DABC521979B0DEADA1DBF9A42D5C4484E0ABCD06BFA53DDEF3C1B20EE3FD59D7C25E41D2B66C62E37FFFFFFFFFFFFFFFF  #2^3072 - 2^3008 + {[2^2942 * e] + 2625351} * 2^64 - 1

q=0x7FFFFFFFFFFFFFFFD6FC2A2C515DA54D57EE2B10139E9E78EC5CE2C1E7169B4AD4F09B208A3219FDE649CEE7124D9F7CBE97F1B1B1863AEC7B40D901576230BD69EF8F6AEAFEB2B09219FA8FAF83376842B1B2AA9EF68D79DAAB89AF3FABE49ACC278638707345BBF15344ED79F7F4390EF8AC509B56F39A98566527A41D3CBD5E0558C159927DB0E88454A5D96471FDDCB56D5BB06BFA340EA7A151EF1CA6FA572B76F3B1B95D8C8583D3E4770536B84F017E70E6FBF176601A0266941A17B0C8B97F4E74C2C1FFC7278919777940C1E1FF1D8DA637D6B99DDAFE5E17611002E2C778C1BE8B41D96379A51360D977FD4435A11C308FE7EE6F1AAD9DB28C81ADDE1A7A6F7CCE011C30DA37E4EB736483BD6C8E9348FBFBF72CC6587D60C36C8E577F0984C289C9385A098649DE21BCA27A7EA229716BA6E9B279710F38FAA5FFAE574155CE4EFB4F743695E2911B1D06D5E290CBCD86F56D0EDFCD216AE22427055E6835FD29EEF79E0D90771FEACEBE12F20E95B363171BFFFFFFFFFFFFFFFF
p=q


#The 4096-bit group has registry value 258 and is calculated from the following formula:
#The modulus is: p = 2^4096 - 2^4032 + {[2^3966 * e] + 5736041} * 2^64 - 1
#The generator is: g = 2
#The group size is: q = (p-1)/2
#The estimated symmetric-equivalent strength of this group is 150 bits
p=0xFFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF97D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD65612433F51F5F066ED0856365553DED1AF3B557135E7F57C935984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE73530ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FBB96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB190B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F619172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD733BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA886B4238611FCFDCDE355B3B6519035BBC34F4DEF99C023861B46FC9D6E6C9077AD91D2691F7F7EE598CB0FAC186D91CAEFE130985139270B4130C93BC437944F4FD4452E2D74DD364F2E21E71F54BFF5CAE82AB9C9DF69EE86D2BC522363A0DABC521979B0DEADA1DBF9A42D5C4484E0ABCD06BFA53DDEF3C1B20EE3FD59D7C25E41D2B669E1EF16E6F52C3164DF4FB7930E9E4E58857B6AC7D5F42D69F6D187763CF1D5503400487F55BA57E31CC7A7135C886EFB4318AED6A1E012D9E6832A907600A918130C46DC778F971AD0038092999A333CB8B7A1A1DB93D7140003C2A4ECEA9F98D0ACC0A8291CDCEC97DCF8EC9B55A7F88A46B4DB5A851F44182E1C68A007E5E655F6AFFFFFFFFFFFFFFFF #2^4096 - 2^4032 + {[2^3966 * e] + 5736041} * 2^64 - 1

q=0x7FFFFFFFFFFFFFFFD6FC2A2C515DA54D57EE2B10139E9E78EC5CE2C1E7169B4AD4F09B208A3219FDE649CEE7124D9F7CBE97F1B1B1863AEC7B40D901576230BD69EF8F6AEAFEB2B09219FA8FAF83376842B1B2AA9EF68D79DAAB89AF3FABE49ACC278638707345BBF15344ED79F7F4390EF8AC509B56F39A98566527A41D3CBD5E0558C159927DB0E88454A5D96471FDDCB56D5BB06BFA340EA7A151EF1CA6FA572B76F3B1B95D8C8583D3E4770536B84F017E70E6FBF176601A0266941A17B0C8B97F4E74C2C1FFC7278919777940C1E1FF1D8DA637D6B99DDAFE5E17611002E2C778C1BE8B41D96379A51360D977FD4435A11C308FE7EE6F1AAD9DB28C81ADDE1A7A6F7CCE011C30DA37E4EB736483BD6C8E9348FBFBF72CC6587D60C36C8E577F0984C289C9385A098649DE21BCA27A7EA229716BA6E9B279710F38FAA5FFAE574155CE4EFB4F743695E2911B1D06D5E290CBCD86F56D0EDFCD216AE22427055E6835FD29EEF79E0D90771FEACEBE12F20E95B34F0F78B737A9618B26FA7DBC9874F272C42BDB563EAFA16B4FB68C3BB1E78EAA81A00243FAADD2BF18E63D389AE44377DA18C576B50F0096CF34195483B00548C0986236E3BC7CB8D6801C0494CCD199E5C5BD0D0EDC9EB8A0001E15276754FCC68566054148E6E764BEE7C764DAAD3FC45235A6DAD428FA20C170E345003F2F32AFB57FFFFFFFFFFFFFFF
p=q

#The 6144-bit group has registry value 259 and is calculated from the following formula:
#The modulus is: p = 2^6144 - 2^6080 + {[2^6014 * e] + 15705020} * 2^64 - 1
#The generator is: g = 2
#The group size is: q = (p-1)/2
#The estimated symmetric-equivalent strength of this group is 175 bits
p=0xFFFFFFFFFFFFFFFFADF85458A2BB4A9AAFDC5620273D3CF1D8B9C583CE2D3695A9E13641146433FBCC939DCE249B3EF97D2FE363630C75D8F681B202AEC4617AD3DF1ED5D5FD65612433F51F5F066ED0856365553DED1AF3B557135E7F57C935984F0C70E0E68B77E2A689DAF3EFE8721DF158A136ADE73530ACCA4F483A797ABC0AB182B324FB61D108A94BB2C8E3FBB96ADAB760D7F4681D4F42A3DE394DF4AE56EDE76372BB190B07A7C8EE0A6D709E02FCE1CDF7E2ECC03404CD28342F619172FE9CE98583FF8E4F1232EEF28183C3FE3B1B4C6FAD733BB5FCBC2EC22005C58EF1837D1683B2C6F34A26C1B2EFFA886B4238611FCFDCDE355B3B6519035BBC34F4DEF99C023861B46FC9D6E6C9077AD91D2691F7F7EE598CB0FAC186D91CAEFE130985139270B4130C93BC437944F4FD4452E2D74DD364F2E21E71F54BFF5CAE82AB9C9DF69EE86D2BC522363A0DABC521979B0DEADA1DBF9A42D5C4484E0ABCD06BFA53DDEF3C1B20EE3FD59D7C25E41D2B669E1EF16E6F52C3164DF4FB7930E9E4E58857B6AC7D5F42D69F6D187763CF1D5503400487F55BA57E31CC7A7135C886EFB4318AED6A1E012D9E6832A907600A918130C46DC778F971AD0038092999A333CB8B7A1A1DB93D7140003C2A4ECEA9F98D0ACC0A8291CDCEC97DCF8EC9B55A7F88A46B4DB5A851F44182E1C68A007E5E0DD9020BFD64B645036C7A4E677D2C38532A3A23BA4442CAF53EA63BB454329B7624C8917BDD64B1C0FD4CB38E8C334C701C3ACDAD0657FCCFEC719B1F5C3E4E46041F388147FB4CFDB477A52471F7A9A96910B855322EDB6340D8A00EF092350511E30ABEC1FFF9E3A26E7FB29F8C183023C3587E38DA0077D9B4763E4E4B94B2BBC194C6651E77CAF992EEAAC0232A281BF6B3A739C1226116820AE8DB5847A67CBEF9C9091B462D538CD72B03746AE77F5E62292C311562A846505DC82DB854338AE49F5235C95B91178CCF2DD5CACEF403EC9D1810C6272B045B3B71F9DC6B80D63FDD4A8E9ADB1E6962A69526D43161C1A41D570D7938DAD4A40E329CD0E40E65FFFFFFFFFFFFFFFF  #2^6144 - 2^6080 + {[2^6014 * e] + 15705020} * 2^64 - 1

q=0x
p=q

#The 8192-bit group has registry value 260 and is calculated from the following formula:
#The modulus is: p = 2^8192 - 2^8128 + {[2^8062 * e] + 10965728} * 2^64 - 1
#The generator is: g = 2
#The group size is: q = (p-1)/2
#The estimated symmetric-equivalent strength of this group is 192 bits
p=0x{[2^8062 * e] + 10965728} * 2^64 - 1

q=0x7fffffffffffffffd6fc2a2c515da54d57ee2b10139e9e78ec5ce2c1e7169b4ad4f09b208a3219fde649cee7124d9f7cbe97f1b1b1863aec7b40d901576230bd69ef8f6aeafeb2b09219fa8faf83376842b1b2aa9ef68d79daab89af3fabe49acc278638707345bbf15344ed79f7f4390ef8ac509b56f39a98566527a41d3cbd5e0558c159927db0e88454a5d96471fddcb56d5bb06bfa340ea7a151ef1ca6fa572b76f3b1b95d8c8583d3e4770536b84f017e70e6fbf176601a0266941a17b0c8b97f4e74c2c1ffc7278919777940c1e1ff1d8da637d6b99ddafe5e17611002e2c778c1be8b41d96379a51360d977fd4435a11c308fe7ee6f1aad9db28c81adde1a7a6f7cce011c30da37e4eb736483bd6c8e9348fbfbf72cc6587d60c36c8e577f0984c289c9385a098649de21bca27a7ea229716ba6e9b279710f38faa5ffae574155ce4efb4f743695e2911b1d06d5e290cbcd86f56d0edfcd216ae22427055e6835fd29eef79e0d90771feacebe12f20e95b34f0f78b737a9618b26fa7dbc9874f272c42bdb563eafa16b4fb68c3bb1e78eaa81a00243faadd2bf18e63d389ae44377da18c576b50f0096cf34195483b00548c0986236e3bc7cb8d6801c0494ccd199e5c5bd0d0edc9eb8a0001e15276754fcc68566054148e6e764bee7c764daad3fc45235a6dad428fa20c170e345003f2f06ec8105feb25b2281b63d2733be961c29951d11dd2221657a9f531dda2a194dbb126448bdeeb258e07ea659c74619a6380e1d66d6832bfe67f638cd8fae1f2723020f9c40a3fda67eda3bd29238fbd4d4b4885c2a99176db1a06c500778491a8288f1855f60fffcf1d1373fd94fc60c1811e1ac3f1c6d003becda3b1f2725ca595de0ca63328f3be57cc97755601195140dfb59d39ce091308b4105746dac23d33e5f7ce4848da316a9c66b9581ba3573bfaf311496188ab15423282ee416dc2a19c5724fa91ae4adc88bc66796eae5677a01f64e8c08631395822d9db8fcee35c06b1feea5474d6d8f34b1534a936a18b0e0d20eab86bc9c6d6a5207194e67fa35551b5680267b00641c0f212d18eca8d7327ed91fe764a84ea1b43ff5b4f6e8e62f05c661defb258877c35b18a151d5c414aaad97ba3e499332e596078e600deb81149c441ce95782f22a282563c5bac1411423605d1ae1afae2c8b0660237ec128aa0fe3464e4358115db84cc3b523073a28d4549884b81ff70e10bf361c13729628d5348f07211e7e4cf4f18b286090bdb1240b66d6cd4afceadc00ca446ce05050ff183ad2bbf118c1fc0ea51f97d22b8f7e46705d4527f45b42aeff395853376f697dd5fdf2c5187d7d5f0e2eb8d43f17ba0f7c60ff437f535dfef29833bf86cbe88ea4fbd4221e8411728354fa30a7008f154a41c7fc466b4645dbe2e321267fffffffffffffff  # q = (p-1)/2  also a prime
p=q




p=0xc257cc8147515985a96c605c6faf2a8f76ed06060fe93191031d8c00d77cbd492a56ef86441c968d63bfee62eba72b3bba0ab9bb7d38b3f1c0303eb1bcc88b7f
p=0xbd4a47eb230ea9a8cef664b6be6e7f811fbd0009ed111fba5f98a748c1d95b9846cb5a5bf1b8bf376c4a5a4a610b2c5f78244f1786eced1f03e49056a62e961f




#https://tools.ietf.org/html/rfc3526  "More Modular Exponential (MODP) Diffie-Hellman groups for Internet Key Exchange (IKE)"
# 1536-bit MODP Group
# The prime is: 2^1536 - 2^1472 - 1 + 2^64 * { [2^1406 pi] + 741804 }
p=0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA237327FFFFFFFFFFFFFFFF

# 2048-bit MODP Group
# This prime is: 2^2048 - 2^1984 - 1 + 2^64 * { [2^1918 pi] + 124476 }

p=0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AACAA68FFFFFFFFFFFFFFFF


# 3072-bit MODP Group
# This prime is: 2^3072 - 2^3008 - 1 + 2^64 * { [2^2942 pi] + 1690314 }

p=0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A93AD2CAFFFFFFFFFFFFFFFF



# 4096-bit MODP Group
# This prime is: 2^4096 - 2^4032 - 1 + 2^64 * { [2^3966 pi] + 240904 }

p=0xFFFFFFFFFFFFFFFFC90FDAA22168C234C4C6628B80DC1CD129024E088A67CC74020BBEA63B139B22514A08798E3404DDEF9519B3CD3A431B302B0A6DF25F14374FE1356D6D51C245E485B576625E7EC6F44C42E9A637ED6B0BFF5CB6F406B7EDEE386BFB5A899FA5AE9F24117C4B1FE649286651ECE45B3DC2007CB8A163BF0598DA48361C55D39A69163FA8FD24CF5F83655D23DCA3AD961C62F356208552BB9ED529077096966D670C354E4ABC9804F1746C08CA18217C32905E462E36CE3BE39E772C180E86039B2783A2EC07A28FB5C55DF06F4C52C9DE2BCBF6955817183995497CEA956AE515D2261898FA051015728E5A8AAAC42DAD33170D04507A33A85521ABDF1CBA64ECFB850458DBEF0A8AEA71575D060C7DB3970F85A6E1E4C7ABF5AE8CDB0933D71E8C94E04A25619DCEE3D2261AD2EE6BF12FFA06D98A0864D87602733EC86A64521F2B18177B200CBBE117577A615D6C770988C0BAD946E208E24FA074E5AB3143DB5BFCE0FD108E4B82D120A92108011A723C12A787E6D788719A10BDBA5B2699C327186AF4E23C1A946834B6150BDA2583E9CA2AD44CE8DBBBC2DB04DE8EF92E8EFC141FBECAA6287C59474E6BC05D99B2964FA090C3A2233BA186515BE7ED1F612970CEE2D7AFB81BDD762170481CD0069127D5B05AA993B4EA988D8FDDC186FFB7DC90A6C08F4DF435C934063199FFFFFFFFFFFFFFFF

# 6144-bit MODP Group
# This prime is: 2^6144 - 2^6080 - 1 + 2^64 * { [2^6014 pi] + 929484 }

p=0x


# 8192-bit MODP Group
# This prime is: 2^8192 - 2^8128 - 1 + 2^64 * { [2^8062 pi] + 4743158 }

p=0x

p=0xffffffffffffffffffffffffffffffff000000000000000000000001

p=0xeb5b24b8c950355165b187c1cffb95c07dc942376401ce623100fbaebc59e45b69c22f9d9d26a0f7c0bd1ca4f7c1784ee24c3e0fa765b41b36ecec2417d193fb0f0cb4078211be0c91d6b5be290c1df7597d0951b71ca3a7378e53aae4b6a842ff7d18104388e48b115df1410d508ad9731378ce021b6b626a20a31daa43927728f0d352251e0813a52e28e70b915bc9aa907b4c9cdc6a0f06d2fcb0f72b39f1f10cc8514a707f72419c9891c239046dde4ee2316c72ef51e0c8a3bc92d471b6d250b46db0c23d255c6a849b186cfeecdd1a075e6c5da79e305b55b1173c71c000993585e020d65fff93f85df07c7ad44dc2c00d82aea82d9fdbc171dfdfd855

print("\n Decimal p = ", p);
print("\n Hexadecimal p = ", hex(p));
print("\n");
if(miller_rabin_test(p,40)):
    print("Prime : ")
else:
    print("Not Prime :")
print()



